name: Deploy Package

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/workflows/*'
    branches:
      - 'prod-*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Set settings.xml
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        repositories: '[{ "id": "${{ secrets.MAVEN_REPO_ID }}", "url": "${{ secrets.MAVEN_REPO_URL }}" }]'
        servers: '[{ "id": "${{ secrets.MAVEN_REPO_ID }}", "username": "${{ secrets.MAVEN_REPO_NAME }}", "password": "${{ secrets.MAVEN_REPO_TOKEN }}" }]'

    - name: Find pom metadata
      id: pom-metadata
      run: |
        export POM_PATH=$(find . -name "pom.xml" -type f | sed 's|/[^/]*$||')
        cd $POM_PATH
        export GROUP_ID=$(mvn -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.groupId -DforceStdout)
        export ARTIFACT_ID=$(mvn -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -DforceStdout)
        COORDINATES="$GROUP_ID.$ARTIFACT_ID"
        echo "group=$GROUP_ID" >> $GITHUB_OUTPUT
        echo "coordinates=$COORDINATES" >> $GITHUB_OUTPUT
        echo "pom-path=$POM_PATH" >> $GITHUB_OUTPUT

    - name: Find branch dependency diff
      id: diff
      run: |
        set -x
        #get parent pom global dependencies
        curl -s -H "Authorization: Bearer ${{ secrets.MAVEN_REPO_TOKEN }}" "https://raw.githubusercontent.com/$GITHUB_REPOSITORY/prod-parent_pom/pom.xml" > $GITHUB_WORKSPACE/pom.xml
        mvn dependency:list | sed -n 's/^\[INFO\] *\([^:]*\):\([^:]*\):jar:\([^:]*\):.*/\1\/\2:\3/p' | sed "s|^|~/.m2/repository/|; s/:/\//g" > $GITHUB_WORKSPACE/dependency_paths.txt
        
        cd ${{ steps.pom-metadata.outputs.pom-path }}
        
        #get current dependencies
        mvn dependency:list | sed -n 's/^\[INFO\] *\([^:]*\):\([^:]*\):jar:\([^:]*\):.*/\1\/\2:\3/p' | sed "s|^|~/.m2/repository/|; s/:/\//g" > current_dependencies.txt
        
        #find diff
        diff $GITHUB_WORKSPACE/dependency_paths.txt current_dependencies.txt | grep -E '^< |^> ' | sed 's/^< //;s/^> //' > temp.txt
        
        #seperate to current project with third parties
        cat temp.txt | grep -Ev "~/.m2/repository/${{ steps.pom-metadata.outputs.group }}/" || true > dependencies_diff.txt
        cat temp.txt | grep "${{ steps.pom-metadata.outputs.group }}" > packages.txt
        
        echo "global_dependencies=$(sed -z 's/\n/,/g;s/,$/\n/' $GITHUB_WORKSPACE/dependency_paths.txt)" >> $GITHUB_OUTPUT
        echo "dependencies_diff=$(sed -z 's/\n/,/g;s/,$/\n/' dependencies_diff.txt)" >> $GITHUB_OUTPUT
        echo "packages=$(sed -z 's/\n/,/g;s/,$/\n/' packages.txt)" >> $GITHUB_OUTPUT
        
        dependencies_diff_empty=true
        if [[ -s dependencies_diff.txt ]]; then
          dependencies_diff_empty=false
        fi
        echo "diff_empty=$dependencies_diff_empty" >> $GITHUB_ENV


    - name: Cache global_dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.diff.outputs.global_dependencies }}
        key: |
          ${{ runner.os }}-global_dependencies

    - name: Cache dependencies_diff
      uses: actions/cache@v2
      if: env.diff_empty == 'false'
      with:
        path: |
          ${{ steps.diff.outputs.dependencies_diff }}
        key: |
          ${{ runner.os }}-dependencies_diff-${{ github.ref_slug }}

    - name: Cache packages
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.diff.outputs.packages }}
        key: |
          ${{ runner.os }}-packages
          

    - name: Check project's dependencies for update
      id: check_update
      run: |
        set -x
        cd ${{ steps.pom-metadata.outputs.pom-path }}
        re_save=false
        
        for package in $(cat packages.txt | sed -E 's|.*/([^/]+)/[^/]+$|\1|' );do 
        
          version=$(cat packages.txt | grep "$package/" | sed -E 's|.*/([^/]+)/?$|\1|')
          remote_sha=$(curl -H "Authorization: Bearer ${{ secrets.MAVEN_REPO_TOKEN }}" https://maven.pkg.github.com/$GITHUB_REPOSITORY/${{ steps.pom-metadata.outputs.group }}/$package/$version/$package-$version.jar.sha1)
          local_path="$HOME/.m2/repository/${{ steps.pom-metadata.outputs.group }}/$package"
          local_sha=$( cat $local_path/$version/$package-$version.jar.sha1)
        
          if [ $local_sha != $remote_sha ] ;then
            rm -rf $HOME/.m2/repository/${{ steps.pom-metadata.outputs.group }}/$package/
            re_save=true
          fi
        done
        echo "re_save=$re_save" >> $GITHUB_ENV
        mvn -B install

    - name: Re-Cache packages
      uses: actions/cache@v2
      if: env.re_save == 'true'
      with:
        path: |
          ${{ steps.diff.outputs.packages }}
        key: |
          ${{ runner.os }}-packages

    - name: Delete package
      uses: actions/delete-package-versions@v2
      with:
        token: ${{ secrets.MAVEN_REPO_TOKEN }}
        package-name: ${{ steps.pom-metadata.outputs.coordinates }}

    - name: Publish Package
      run: |
        cd ${{ steps.pom-metadata.outputs.pom-path }}
        mvn -B deploy
