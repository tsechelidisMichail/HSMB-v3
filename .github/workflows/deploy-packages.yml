name: Deploy Package

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/workflows/*'
      
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        id: setup
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: '[{ "id": "${{ secrets.MAVEN_REPO_ID }}", "url": "${{ secrets.MAVEN_REPO_URL }}" }]'
          servers: '[{ "id": "${{ secrets.MAVEN_REPO_ID }}", "username": "${{ secrets.MAVEN_REPO_NAME }}", "password": "${{ secrets.MAVEN_REPO_TOKEN }}" }]'

      - name: Find pom metadata
        id: pom-metadata
        run: |
          export POM_PATH=$(find . -name "pom.xml" -type f | sed 's|/[^/]*$||')
          cd $POM_PATH
          export GROUP_ID=$(mvn -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.groupId -DforceStdout)
          export ARTIFACT_ID=$(mvn -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -DforceStdout)
          COORDINATES="$GROUP_ID.$ARTIFACT_ID"
          echo "group=$GROUP_ID" >> $GITHUB_OUTPUT
          echo "coordinates=$COORDINATES" >> $GITHUB_OUTPUT
          echo "pom-path=$POM_PATH" >> $GITHUB_OUTPUT

      - name: Check project's dependencies for update
        if: steps.setup.outputs.cache-hit == 'true'
        run: |
          set -x
          cd ${{ steps.pom-metadata.outputs.pom-path }}
          mvn dependency:list | grep "${{ steps.pom-metadata.outputs.group }}" > list.txt

          for dependency in $(cat list.txt | sed -n "s/.*${{ steps.pom-metadata.outputs.group }}:\([^:]*\):.*$/\1/p");do 

            version=$(cat list.txt | sed -n "s/.*$dependency:jar:\([^:]*\):.*$/\1/p")
            remote_sha=$(curl -H "Authorization: Bearer ${{ secrets.MAVEN_REPO_TOKEN }}" https://maven.pkg.github.com/$GITHUB_REPOSITORY/${{ steps.pom-metadata.outputs.group }}/$dependency/$version/$dependency-$version.jar.sha1)
            local_path="$HOME/.m2/repository/${{ steps.pom-metadata.outputs.group }}/$dependency"
            local_sha=$( cat $local_path/$version/$dependency-$version.jar.sha1)

            if [ $local_sha != $remote_sha ] ;then
              rm -rf $HOME/.m2/repository/${{ steps.pom-metadata.outputs.group }}/$dependency
            fi

          done
          mvn -B install

      - name: Re-cache
        uses: actions/cache@v2
        with:
          path: $HOME/.m2/repository
          key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Delete package
        uses: actions/delete-package-versions@v2
        with:
          token: ${{ secrets.MAVEN_REPO_TOKEN }}
          package-name: ${{ steps.pom-metadata.outputs.coordinates }}

      - name: Publish Package
        run: |
          cd ${{ steps.pom-metadata.outputs.pom-path }}
          mvn -B deploy
